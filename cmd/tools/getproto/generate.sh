#!/usr/bin/env bash
# run from root of repo

set -e

temporalimports=$(
  find proto/internal/ -name \*.proto |
    xargs grep -h '^import\s\+"temporal/api/.*\.proto"\s*;\s*$' |
    sort -u | sed 's,.*"\(.*\)".*,\1,'
)

googleimports=$(
  find proto/internal/ -name \*.proto |
    xargs grep -h '^import\s\+"google/.*\.proto"\s*;\s*$' |
    sort -u | sed 's,.*"\(.*\)".*,\1,' |
    grep -v 'google/api/annotations.proto'
)

declare -A temporal_proto_to_package google_proto_to_package imported

import_temporal_proto() {
    local name=${1%/*}
    name=${name/temporal\/api/go.temporal.io\/api}
    local withoutv=${name%%/v?}
    temporal_proto_to_package[$1]=${withoutv##*/}

    [[ -n ${imported[$name]} ]] && return || imported[$name]=1
    echo -e "\t\"$name\""
}

import_google_proto() {
    local name=${1%%.proto}
    name=${name##*/}
    name="google.golang.org/protobuf/types/known/${name}pb"
    google_proto_to_package[$1]=${name##*/}

    [[ -n ${imported[$name]} ]] && return || imported[$name]=1
    echo -e "\t\"$name\""
}

mangle() {
  local mangled=${1//\//_}
  echo "File_${mangled//./_}"
}

{
  echo '// Code generated by generate.sh. DO NOT EDIT.'
  echo
  echo 'package main'
  echo
  echo 'import ('
  for p in $temporalimports; do import_temporal_proto "$p"; done
  for p in $googleimports; do import_google_proto "$p"; done
  echo ')'
  echo
  echo 'func writeFiles() {'
  for name in $temporalimports; do
    echo -e "\twriteFile(\"${name}\", ${temporal_proto_to_package[$name]}.$(mangle $name))"
  done
  for name in $googleimports; do
    echo -e "\twriteFile(\"${name}\", ${google_proto_to_package[$name]}.$(mangle $name))"
  done
  echo '}'
} > cmd/tools/getproto/files.go
