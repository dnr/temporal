log:
  stdout: true
  level: info

persistence:
  defaultStore: sqlite-default
  visibilityStore: sqlite-visibility
  numHistoryShards: 1
  datastores:
    sqlite-default:
      sql:
        user: ""
        password: ""
        pluginName: "sqlite"
        databaseName: "sqlite-remote"
        connectAddr: "localhost"
        connectProtocol: "tcp"
        connectAttributes:
          cache: "private"
          setup: true
          journal_mode: wal
          synchronous: 2
        maxConns: 1
        maxIdleConns: 1
        maxConnLifetime: "1h"
        tls:
          enabled: false
          caFile: ""
          certFile: ""
          keyFile: ""
          enableHostVerification: false
          serverName: ""

    sqlite-visibility:
      sql:
        user: ""
        password: ""
        pluginName: "sqlite"
        databaseName: "sqlite-remote"
        connectAddr: "localhost"
        connectProtocol: "tcp"
        connectAttributes:
          cache: "private"
          setup: true
          journal_mode: wal
          synchronous: 2
        maxConns: 1
        maxIdleConns: 1
        maxConnLifetime: "1h"
        tls:
          enabled: false
          caFile: ""
          certFile: ""
          keyFile: ""
          enableHostVerification: false
          serverName: ""
global:
  membership:
    maxJoinDuration: 30s
    broadcastAddress: "127.0.0.1"
  tls:
    refreshInterval: 10s
    internode:
      server:
        requireClientAuth: true
        certFile: remote.pem
        keyFile: remote-key.pem
        clientCaFiles:
          - ca.pem
          - badca.pem
      client:
        serverName: remote
        rootCaFiles:
          - ca.pem
          - badca.pem
    frontend:
      server:
        requireClientAuth: true
        certFile: remote.pem
        keyFile: remote-key.pem
        clientCaFiles:
          - ca.pem
          - badca.pem
      client:
        serverName: remote
        rootCaFiles:
          - ca.pem
          - badca.pem
    remoteClusters:
      "localhost":
        server:
          requireClientAuth: true
          certFile: remote.pem
          keyFile: remote-key.pem
          clientCaFiles:
            - ca.pem
        client:
          serverName: local
          rootCaFiles:
            - ca.pem
  pprof:
    port: 17936
  metrics:
    prometheus:
#      # specify framework to use new approach for initializing metrics and/or use opentelemetry
#      framework: "opentelemetry"
      framework: "tally"
      timerType: "histogram"
      listenAddress: "127.0.0.1:8000"

services:
  frontend:
    rpc:
      grpcPort: 17233
      membershipPort: 16933
      bindOnLocalHost: true
      httpPort: 17243

  matching:
    rpc:
      grpcPort: 17235
      membershipPort: 16935
      bindOnLocalHost: true

  history:
    rpc:
      grpcPort: 17234
      membershipPort: 16934
      bindOnLocalHost: true

  worker:
    rpc:
      grpcPort: 17239
      membershipPort: 16939
      bindOnLocalHost: true

clusterMetadata:
  enableGlobalNamespace: true
  failoverVersionIncrement: 10
  masterClusterName: "remote"
  currentClusterName: "remote"
  clusterInformation:
    remote:
      enabled: true
      initialFailoverVersion: 2
      rpcName: "frontend"
      rpcAddress: "localhost:17233"

dcRedirectionPolicy:
  policy: "noop"

archival:
  history:
    state: "enabled"
    enableRead: true
    provider:
      filestore:
        fileMode: "0666"
        dirMode: "0766"
      gstorage:
        credentialsPath: "/tmp/gcloud/keyfile.json"
  visibility:
    state: "enabled"
    enableRead: true
    provider:
      filestore:
        fileMode: "0666"
        dirMode: "0766"

namespaceDefaults:
  archival:
    history:
      state: "disabled"
      URI: "file:///tmp/temporal_archival/development"
    visibility:
      state: "disabled"
      URI: "file:///tmp/temporal_vis_archival/development"

dynamicConfigClient:
  filepath: "config/dynamicconfig/development-sql.yaml"
  pollInterval: "10s"
